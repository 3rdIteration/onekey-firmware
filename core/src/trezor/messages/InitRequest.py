# Automatically generated by pb2py
# fmt: off
import protobuf as p

from .BIP32Seed import BIP32Seed
from .ChainParams import ChainParams
from .NodeConfig import NodeConfig

if __debug__:
    try:
        from typing import Dict, List  # noqa: F401
        from typing_extensions import Literal  # noqa: F401
    except ImportError:
        pass


class InitRequest(p.MessageType):
    MESSAGE_WIRE_TYPE = 807

    def __init__(
        self,
        node_config: NodeConfig = None,
        chainparams: ChainParams = None,
        coldstart: bool = None,
        hsm_secret: BIP32Seed = None,
    ) -> None:
        self.node_config = node_config
        self.chainparams = chainparams
        self.coldstart = coldstart
        self.hsm_secret = hsm_secret

    @classmethod
    def get_fields(cls) -> Dict:
        return {
            1: ('node_config', NodeConfig, 0),
            2: ('chainparams', ChainParams, 0),
            3: ('coldstart', p.BoolType, 0),
            100: ('hsm_secret', BIP32Seed, 0),
        }
