# Automatically generated by pb2py
# fmt: off
from .. import protobuf as p

from .BitcoinSignature import BitcoinSignature

if __debug__:
    try:
        from typing import Dict, List  # noqa: F401
        from typing_extensions import Literal  # noqa: F401
    except ImportError:
        pass


class CommitmentTxSignatureReply(p.MessageType):
    MESSAGE_WIRE_TYPE = 866

    def __init__(
        self,
        signature: BitcoinSignature = None,
        htlc_signatures: List[BitcoinSignature] = None,
    ) -> None:
        self.signature = signature
        self.htlc_signatures = htlc_signatures if htlc_signatures is not None else []

    @classmethod
    def get_fields(cls) -> Dict:
        return {
            1: ('signature', BitcoinSignature, 0),
            2: ('htlc_signatures', BitcoinSignature, p.FLAG_REPEATED),
        }
