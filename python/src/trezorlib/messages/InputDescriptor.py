# Automatically generated by pb2py
# fmt: off
from .. import protobuf as p

from .KeyLocator import KeyLocator
from .TxOut import TxOut
from .UnilateralCloseInfo import UnilateralCloseInfo

if __debug__:
    try:
        from typing import Dict, List  # noqa: F401
        from typing_extensions import Literal  # noqa: F401
        EnumTypeSpendType = Literal[0, 1, 3, 4]
    except ImportError:
        pass


class InputDescriptor(p.MessageType):
    MESSAGE_WIRE_TYPE = 861

    def __init__(
        self,
        key_loc: KeyLocator = None,
        prev_output: TxOut = None,
        spend_type: EnumTypeSpendType = None,
        close_info: UnilateralCloseInfo = None,
        redeem_script: bytes = None,
    ) -> None:
        self.key_loc = key_loc
        self.prev_output = prev_output
        self.spend_type = spend_type
        self.close_info = close_info
        self.redeem_script = redeem_script

    @classmethod
    def get_fields(cls) -> Dict:
        return {
            1: ('key_loc', KeyLocator, 0),
            2: ('prev_output', TxOut, 0),
            3: ('spend_type', p.EnumType("SpendType", (0, 1, 3, 4)), 0),
            4: ('close_info', UnilateralCloseInfo, 0),
            5: ('redeem_script', p.BytesType, 0),
        }
